{"ast":null,"code":"var _jsxFileName = \"D:\\\\All-my-projects\\\\10-CROWNCLOTHING\\\\crown-clothing\\\\src\\\\components\\\\payment-form-item\\\\payment-form-items.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../context/cart.context\";\nimport { UserContext } from \"../../context/user.context\";\nimport PaymentActionButton from \"../payment-action-button/payent-action-button.component\";\nimport \"./payment-form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentFormItem = ({\n  closePaymentForm\n}) => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    cartTotal\n  } = useContext(CartContext);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    try {\n      const response = await fetch(\"/.netlify/functions/create-payment-intent\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: cartTotal * 100\n        })\n      }).then(res => res.json());\n      console.log(\"response\", response);\n      const {\n        clientSecret\n      } = response;\n      const cardElement = elements.getElement(CardElement);\n      const paymentResult = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: currentUser ? currentUser.displayName : \"Guest\"\n          }\n        }\n      });\n      setIsProcessingPayment(false);\n      if (paymentResult.error) {\n        alert(`Payment failed: ${paymentResult.error.message}`);\n      } else {\n        if (paymentResult.paymentIntent.status === \"succeeded\") alert(\"Payment successful!\");\n      }\n    } catch (err) {\n      console.error(\"Payment processing error:\", err.message);\n      alert(\"An error occurred during the payment process. Please try again.\");\n      setIsProcessingPayment(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: paymentHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Credit Card Payment:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PaymentActionButton, {\n      isProcessingPayment: isProcessingPayment,\n      closePaymentForm: closePaymentForm\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentFormItem, \"uwd3+hSr7FJnaPlT+BQwP7JNxk8=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentFormItem;\nexport default PaymentFormItem;\nvar _c;\n$RefreshReg$(_c, \"PaymentFormItem\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","useContext","CartContext","UserContext","PaymentActionButton","jsxDEV","_jsxDEV","PaymentFormItem","closePaymentForm","_s","stripe","elements","cartTotal","currentUser","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","console","log","clientSecret","cardElement","getElement","paymentResult","confirmCardPayment","payment_method","card","billing_details","name","displayName","error","alert","message","paymentIntent","status","err","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/All-my-projects/10-CROWNCLOTHING/crown-clothing/src/components/payment-form-item/payment-form-items.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"../../context/cart.context\";\r\nimport { UserContext } from \"../../context/user.context\";\r\nimport PaymentActionButton from \"../payment-action-button/payent-action-button.component\";\r\nimport \"./payment-form.scss\";\r\n\r\nconst PaymentFormItem = ({ closePaymentForm }) => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { cartTotal } = useContext(CartContext);\r\n  const { currentUser } = useContext(UserContext);\r\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsProcessingPayment(true);\r\n    try {\r\n      const response = await fetch(\r\n        \"/.netlify/functions/create-payment-intent\",\r\n        {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ amount: cartTotal * 100 }),\r\n        }\r\n      ).then((res) => res.json());\r\n\r\n      console.log(\"response\", response);\r\n      const { clientSecret } = response;\r\n\r\n      const cardElement = elements.getElement(CardElement);\r\n\r\n      const paymentResult = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: cardElement,\r\n          billing_details: {\r\n            name: currentUser ? currentUser.displayName : \"Guest\",\r\n          },\r\n        },\r\n      });\r\n\r\n      setIsProcessingPayment(false);\r\n\r\n      if (paymentResult.error) {\r\n        alert(`Payment failed: ${paymentResult.error.message}`);\r\n      } else {\r\n        if (paymentResult.paymentIntent.status === \"succeeded\")\r\n          alert(\"Payment successful!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Payment processing error:\", err.message);\r\n      alert(\"An error occurred during the payment process. Please try again.\");\r\n      setIsProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={paymentHandler}>\r\n      <h4>Credit Card Payment:</h4>\r\n      <CardElement />\r\n      <PaymentActionButton\r\n        isProcessingPayment={isProcessingPayment}\r\n        closePaymentForm={closePaymentForm}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default PaymentFormItem;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,SAASC,UAAU,QAAQ,OAAO;AAClC,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,WAAW,QAAQ,4BAA4B;AACxD,OAAOC,mBAAmB,MAAM,yDAAyD;AACzF,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,MAAM,GAAGX,SAAS,CAAC,CAAC;EAC1B,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAU,CAAC,GAAGX,UAAU,CAACC,WAAW,CAAC;EAC7C,MAAM;IAAEW;EAAY,CAAC,GAAGZ,UAAU,CAACE,WAAW,CAAC;EAC/C,MAAM,CAACW,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMmB,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACR,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;IACF;IAEAI,sBAAsB,CAAC,IAAI,CAAC;IAC5B,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAC1B,2CAA2C,EAC3C;QACEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAEd,SAAS,GAAG;QAAI,CAAC;MAClD,CACF,CAAC,CAACe,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MAE3BC,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEZ,QAAQ,CAAC;MACjC,MAAM;QAAEa;MAAa,CAAC,GAAGb,QAAQ;MAEjC,MAAMc,WAAW,GAAGtB,QAAQ,CAACuB,UAAU,CAACpC,WAAW,CAAC;MAEpD,MAAMqC,aAAa,GAAG,MAAMzB,MAAM,CAAC0B,kBAAkB,CAACJ,YAAY,EAAE;QAClEK,cAAc,EAAE;UACdC,IAAI,EAAEL,WAAW;UACjBM,eAAe,EAAE;YACfC,IAAI,EAAE3B,WAAW,GAAGA,WAAW,CAAC4B,WAAW,GAAG;UAChD;QACF;MACF,CAAC,CAAC;MAEF1B,sBAAsB,CAAC,KAAK,CAAC;MAE7B,IAAIoB,aAAa,CAACO,KAAK,EAAE;QACvBC,KAAK,CAAC,mBAAmBR,aAAa,CAACO,KAAK,CAACE,OAAO,EAAE,CAAC;MACzD,CAAC,MAAM;QACL,IAAIT,aAAa,CAACU,aAAa,CAACC,MAAM,KAAK,WAAW,EACpDH,KAAK,CAAC,qBAAqB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOI,GAAG,EAAE;MACZjB,OAAO,CAACY,KAAK,CAAC,2BAA2B,EAAEK,GAAG,CAACH,OAAO,CAAC;MACvDD,KAAK,CAAC,iEAAiE,CAAC;MACxE5B,sBAAsB,CAAC,KAAK,CAAC;IAC/B;EACF,CAAC;EAED,oBACET,OAAA;IAAM0C,QAAQ,EAAEhC,cAAe;IAAAiC,QAAA,gBAC7B3C,OAAA;MAAA2C,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC7B/C,OAAA,CAACR,WAAW;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACf/C,OAAA,CAACF,mBAAmB;MAClBU,mBAAmB,EAAEA,mBAAoB;MACzCN,gBAAgB,EAAEA;IAAiB;MAAA0C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAC5C,EAAA,CAlEIF,eAAe;EAAA,QACJR,SAAS,EACPC,WAAW;AAAA;AAAAsD,EAAA,GAFxB/C,eAAe;AAoErB,eAAeA,eAAe;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}