{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithPopup,\n// signInWithRedirect,\nGoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch, getDocs, query } from \"firebase/firestore\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDFoT160xGD_3SqJycWRjr7WC-eVIkku20\",\n  authDomain: \"crown-clothing-c39b5.firebaseapp.com\",\n  projectId: \"crown-clothing-c39b5\",\n  storageBucket: \"crown-clothing-c39b5.appspot.com\",\n  messagingSenderId: \"481420928275\",\n  appId: \"1:481420928275:web:f0b77c4400ca08e2d566e6\",\n  measurementId: \"G-SL61HY7CGW\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.getCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\nconst db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectsToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log(\"done\");\n};\nexport const getCategoriesAndDocument = async () => {\n  const collectionRef = collection(db, \"categories\");\n  const q = query(collectionRef);\n  const querySnapShort = await getDocs(q);\n  const categoryMap = querySnapShort.docs.reduce((acc, docSnapShort) => {\n    const {\n      title,\n      items\n    } = docSnapShort.data();\n    acc[title.toLowerCase()] = items;\n    return acc;\n  }, {});\n  return categoryMap;\n};\nexport const createUserDocumentFromAuth = async (userAuth, additionalSetting) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, \"users\", userAuth.uid);\n  const snapShort = await getDoc(userDocRef);\n  if (!snapShort.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalSetting\n      });\n    } catch (err) {\n      console.log(\"createUserDocumentFromAuth\", err);\n    }\n  }\n  return userDocRef;\n};\nexport const createUserAuthWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInUserAuthWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => onAuthStateChanged(auth, callback);","map":{"version":3,"names":["initializeApp","getAuth","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","getDocs","query","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","provider","getCustomParameters","prompt","auth","signInWithGooglePopup","db","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","getCategoriesAndDocument","q","querySnapShort","categoryMap","docs","reduce","acc","docSnapShort","items","data","createUserDocumentFromAuth","userAuth","additionalSetting","userDocRef","uid","snapShort","exists","displayName","email","createdAt","Date","err","createUserAuthWithEmailAndPassword","password","signInUserAuthWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["D:/All-my-projects/10-CROWNCLOTHING/crown-clothing/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\r\n\r\nimport {\r\n  getAuth,\r\n  signInWithPopup,\r\n  // signInWithRedirect,\r\n  GoogleAuthProvider,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n  onAuthStateChanged,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getFirestore,\r\n  doc,\r\n  getDoc,\r\n  setDoc,\r\n  collection,\r\n  writeBatch,\r\n  getDocs,\r\n  query,\r\n} from \"firebase/firestore\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDFoT160xGD_3SqJycWRjr7WC-eVIkku20\",\r\n  authDomain: \"crown-clothing-c39b5.firebaseapp.com\",\r\n  projectId: \"crown-clothing-c39b5\",\r\n  storageBucket: \"crown-clothing-c39b5.appspot.com\",\r\n  messagingSenderId: \"481420928275\",\r\n  appId: \"1:481420928275:web:f0b77c4400ca08e2d566e6\",\r\n  measurementId: \"G-SL61HY7CGW\",\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nprovider.getCustomParameters({\r\n  prompt: \"select_account\",\r\n});\r\n\r\nexport const auth = getAuth();\r\n\r\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\r\n\r\nconst db = getFirestore();\r\n\r\nexport const addCollectionAndDocuments = async (\r\n  collectionKey,\r\n  objectsToAdd\r\n) => {\r\n  const collectionRef = collection(db, collectionKey);\r\n  const batch = writeBatch(db);\r\n\r\n  objectsToAdd.forEach((object) => {\r\n    const docRef = doc(collectionRef, object.title.toLowerCase());\r\n    batch.set(docRef, object);\r\n  });\r\n  await batch.commit();\r\n  console.log(\"done\");\r\n};\r\n\r\nexport const getCategoriesAndDocument = async () => {\r\n  const collectionRef = collection(db, \"categories\");\r\n  const q = query(collectionRef);\r\n\r\n  const querySnapShort = await getDocs(q);\r\n  const categoryMap = querySnapShort.docs.reduce((acc, docSnapShort) => {\r\n    const { title, items } = docSnapShort.data();\r\n    acc[title.toLowerCase()] = items;\r\n    return acc;\r\n  }, {});\r\n  return categoryMap;\r\n};\r\n\r\nexport const createUserDocumentFromAuth = async (\r\n  userAuth,\r\n  additionalSetting\r\n) => {\r\n  if (!userAuth) return;\r\n\r\n  const userDocRef = doc(db, \"users\", userAuth.uid);\r\n\r\n  const snapShort = await getDoc(userDocRef);\r\n\r\n  if (!snapShort.exists()) {\r\n    const { displayName, email } = userAuth;\r\n    const createdAt = new Date();\r\n\r\n    try {\r\n      await setDoc(userDocRef, {\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalSetting,\r\n      });\r\n    } catch (err) {\r\n      console.log(\"createUserDocumentFromAuth\", err);\r\n    }\r\n  }\r\n  return userDocRef;\r\n};\r\n\r\nexport const createUserAuthWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signInUserAuthWithEmailAndPassword = async (email, password) => {\r\n  if (!email || !password) return;\r\n\r\n  return await signInWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const signOutUser = async () => await signOut(auth);\r\nexport const onAuthStateChangedListener = (callback) =>\r\n  onAuthStateChanged(auth, callback);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}