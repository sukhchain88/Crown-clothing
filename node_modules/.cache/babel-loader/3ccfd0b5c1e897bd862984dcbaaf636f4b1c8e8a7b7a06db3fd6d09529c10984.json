{"ast":null,"code":"var _jsxFileName = \"D:\\\\All-my-projects\\\\10-CROWNCLOTHING\\\\crown-clothing\\\\src\\\\components\\\\payment-form\\\\payment-form.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Button from \"../button/button.component\";\nimport \"./payment-form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n\n    // setIsProcessingPayment(true);\n\n    const response = await fetch(\"http://localhost:3001/.netlify/functions/create-payment-intents\", {\n      method: \"post\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        amount: 10000\n      })\n    }).then(res => res.json());\n    console.log(response);\n    const {\n      paymentIntent: {\n        client_secret\n      }\n    } = response;\n    console.log(client_secret);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: paymentHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Credit Card Payment:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        buttonType: \"inverted\",\n        children: \"Pay Now\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"Om/R0oll3STdo2tlJeh/H05mhoc=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","Button","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","console","log","paymentIntent","client_secret","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","buttonType","_c","$RefreshReg$"],"sources":["D:/All-my-projects/10-CROWNCLOTHING/crown-clothing/src/components/payment-form/payment-form.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport Button from \"../button/button.component\";\r\n\r\nimport \"./payment-form.scss\";\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    // setIsProcessingPayment(true);\r\n\r\n    const response = await fetch(\r\n      \"http://localhost:3001/.netlify/functions/create-payment-intents\",\r\n      {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ amount: 10000 }),\r\n      }\r\n    ).then((res) => res.json());\r\n\r\n    console.log(response);\r\n\r\n    const {\r\n      paymentIntent: { client_secret },\r\n    } = response;\r\n\r\n    console.log(client_secret);\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-container\">\r\n      <form onSubmit={paymentHandler}>\r\n        <h2>Credit Card Payment:</h2>\r\n        <CardElement />\r\n        <Button buttonType=\"inverted\">Pay Now</Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AAC7E,OAAOC,MAAM,MAAM,4BAA4B;AAE/C,OAAO,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAMC,MAAM,GAAGP,SAAS,CAAC,CAAC;EAC1B,MAAMQ,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAErE,MAAMa,cAAc,GAAG,MAAOC,CAAC,IAAK;IAClCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,MAAM,IAAI,CAACC,QAAQ,EAAE;MACxB;IACF;;IAEA;;IAEA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAAiE,EACjE;MACEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEC,MAAM,EAAE;MAAM,CAAC;IACxC,CACF,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;IAE3BC,OAAO,CAACC,GAAG,CAACZ,QAAQ,CAAC;IAErB,MAAM;MACJa,aAAa,EAAE;QAAEC;MAAc;IACjC,CAAC,GAAGd,QAAQ;IAEZW,OAAO,CAACC,GAAG,CAACE,aAAa,CAAC;EAC5B,CAAC;EAED,oBACExB,OAAA;IAAKyB,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChC1B,OAAA;MAAM2B,QAAQ,EAAEpB,cAAe;MAAAmB,QAAA,gBAC7B1B,OAAA;QAAA0B,QAAA,EAAI;MAAoB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC7B/B,OAAA,CAACL,WAAW;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACf/B,OAAA,CAACF,MAAM;QAACkC,UAAU,EAAC,UAAU;QAAAN,QAAA,EAAC;MAAO;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3CID,WAAW;EAAA,QACAL,SAAS,EACPC,WAAW;AAAA;AAAAoC,EAAA,GAFxBhC,WAAW;AA6CjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}