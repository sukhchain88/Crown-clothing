{"ast":null,"code":"var _jsxFileName = \"D:\\\\All-my-projects\\\\10-CROWNCLOTHING\\\\crown-clothing\\\\src\\\\components\\\\payment-form\\\\payment-form.component.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\nimport Button from \"../button/button.component\";\nimport { useContext } from \"react\";\nimport { CartContext } from \"../../context/cart.context\";\nimport { UserContext } from \"../../context/user.context\";\nimport \"./payment-form.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentForm = () => {\n  _s();\n  const stripe = useStripe();\n  const elements = useElements();\n  const {\n    cartTotal\n  } = useContext(CartContext);\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\n  const [isPaymentFormVisible, setIsPaymentFormVisible] = useState(false);\n  const closePaymentForm = () => {\n    console.log(\"9\");\n    setIsPaymentFormVisible(false);\n  };\n  const paymentHandler = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    setIsProcessingPayment(true);\n    try {\n      const response = await fetch(\"/.netlify/functions/create-payment-intent\", {\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          amount: cartTotal * 100\n        })\n      }).then(res => res.json());\n      console.log(\"response\", response);\n      const {\n        clientSecret\n      } = response;\n      const cardElement = elements.getElement(CardElement);\n      const paymentResult = await stripe.confirmCardPayment(clientSecret, {\n        payment_method: {\n          card: cardElement,\n          billing_details: {\n            name: currentUser ? currentUser.displayName : \"Guest\"\n          }\n        }\n      });\n      setIsProcessingPayment(false);\n      if (paymentResult.error) {\n        alert(`Payment failed: ${paymentResult.error.message}`);\n      } else {\n        if (paymentResult.paymentIntent.status === \"succeeded\") alert(\"Payment successful!\");\n      }\n    } catch (err) {\n      console.error(\"Payment processing error:\", err.message);\n      alert(\"An error occurred during the payment process. Please try again.\");\n      setIsProcessingPayment(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-popup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onSubmit: paymentHandler,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Credit Card Payment:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            buttonType: \"inverted\",\n            disabled: isProcessingPayment,\n            children: isProcessingPayment ? \"Processing...\" : \"Pay Now\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"close-button\",\n          onClick: closePaymentForm,\n          children: \"close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentForm, \"6prSUkZZ5jARWMnhhIJPWmMHuzE=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = PaymentForm;\nexport default PaymentForm;\nvar _c;\n$RefreshReg$(_c, \"PaymentForm\");","map":{"version":3,"names":["React","useState","CardElement","useStripe","useElements","Button","useContext","CartContext","UserContext","jsxDEV","_jsxDEV","PaymentForm","_s","stripe","elements","cartTotal","currentUser","isProcessingPayment","setIsProcessingPayment","isPaymentFormVisible","setIsPaymentFormVisible","closePaymentForm","console","log","paymentHandler","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","clientSecret","cardElement","getElement","paymentResult","confirmCardPayment","payment_method","card","billing_details","name","displayName","error","alert","message","paymentIntent","status","err","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","buttonType","disabled","onClick","_c","$RefreshReg$"],"sources":["D:/All-my-projects/10-CROWNCLOTHING/crown-clothing/src/components/payment-form/payment-form.component.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport Button from \"../button/button.component\";\r\nimport { useContext } from \"react\";\r\nimport { CartContext } from \"../../context/cart.context\";\r\nimport { UserContext } from \"../../context/user.context\";\r\nimport \"./payment-form.scss\";\r\n\r\nconst PaymentForm = () => {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { cartTotal } = useContext(CartContext);\r\n  const { currentUser } = useContext(UserContext);\r\n  const [isProcessingPayment, setIsProcessingPayment] = useState(false);\r\n  const [isPaymentFormVisible, setIsPaymentFormVisible] = useState(false);\r\n\r\n  const closePaymentForm = () => {\r\n    console.log(\"9\");\r\n    setIsPaymentFormVisible(false);\r\n  };\r\n  const paymentHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!stripe || !elements) {\r\n      return;\r\n    }\r\n\r\n    setIsProcessingPayment(true);\r\n    try {\r\n      const response = await fetch(\r\n        \"/.netlify/functions/create-payment-intent\",\r\n        {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-Type\": \"application/json\",\r\n          },\r\n          body: JSON.stringify({ amount: cartTotal * 100 }),\r\n        }\r\n      ).then((res) => res.json());\r\n\r\n      console.log(\"response\", response);\r\n      const { clientSecret } = response;\r\n\r\n      const cardElement = elements.getElement(CardElement);\r\n\r\n      const paymentResult = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: cardElement,\r\n          billing_details: {\r\n            name: currentUser ? currentUser.displayName : \"Guest\",\r\n          },\r\n        },\r\n      });\r\n\r\n      setIsProcessingPayment(false);\r\n\r\n      if (paymentResult.error) {\r\n        alert(`Payment failed: ${paymentResult.error.message}`);\r\n      } else {\r\n        if (paymentResult.paymentIntent.status === \"succeeded\")\r\n          alert(\"Payment successful!\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Payment processing error:\", err.message);\r\n      alert(\"An error occurred during the payment process. Please try again.\");\r\n      setIsProcessingPayment(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-popup\">\r\n      <div className=\"payment-container\">\r\n        <form>\r\n          <div onSubmit={paymentHandler}>\r\n            <h2>Credit Card Payment:</h2>\r\n            <CardElement />\r\n            <Button\r\n              type=\"submit\"\r\n              buttonType=\"inverted\"\r\n              disabled={isProcessingPayment}\r\n            >\r\n              {isProcessingPayment ? \"Processing...\" : \"Pay Now\"}\r\n            </Button>\r\n          </div>\r\n          <Button className=\"close-button\" onClick={closePaymentForm}>\r\n            close\r\n          </Button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}