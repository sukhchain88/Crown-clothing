{"ast":null,"code":"var _jsxFileName = \"D:\\\\All-my-projects\\\\10-CROWNCLOTHING\\\\crown-clothing\\\\src\\\\context\\\\cart.context.jsx\";\nimport React from \"react\";\nimport { createContext, useState, useEffect } from 'react';\nconst addCartItem = (cartItems, productToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === productToAdd.id);\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === productToAdd.id ? {\n      ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n  return [...cartItems, {\n    ...productToAdd,\n    quantity: 1\n  }];\n};\nconst removeCartItem = (cartItems, cartItemToRemove) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToRemove.id);\n  if (existingCartItem.quantity === 1) {\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n  }\n  return cartItems.map(cartItem => cartItem.id === cartItemToRemove.id ? {\n    ...cartItem,\n    quantity: cartItem.quantity - 1\n  } : cartItem);\n};\nconst clearCartItem = (cartItems, cartItemToRemove) => {\n  return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id);\n};\nexport const CartContext = createContext({\n  isCartOpen: false,\n  setIsOpen: () => {},\n  cartItems: [],\n  addItemToCart: () => {},\n  removeItemToCart: () => {},\n  clearItemFromCart: () => {},\n  setCartItemCount: () => {},\n  cartItemCount: 0,\n  cartTotal: 0\n});\nexport const CartProvider = ({\n  children\n}) => {\n  const [isCartOpen, setIsCartOpen] = useState(false);\n  const [cartItems, setCartItems] = useState([]);\n  const [cartItemCount, setCartItemCount] = useState(0);\n  const [cartTotal, setCartTotal] = useState(0);\n  useEffect(() => {\n    const count = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0);\n    setCartItemCount(count);\n  }, [cartItems]);\n  useEffect(() => {\n    const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0);\n    setCartTotal(newCartTotal);\n  }, [cartItems]);\n  const addItemToCart = productToAdd => {\n    setCartItems(addCartItem(cartItems, productToAdd));\n  };\n  const removeItemToCart = cartItemToRemove => {\n    setCartItems(removeCartItem(cartItems, cartItemToRemove));\n  };\n  const clearItemFromCart = cartItemToClear => {\n    setCartItems(clearCartItem(cartItems, cartItemToClear));\n  };\n  const value = {\n    isCartOpen,\n    setIsCartOpen,\n    cartItems,\n    addItemToCart,\n    removeItemToCart,\n    clearItemFromCart,\n    cartItemCount,\n    setCartItemCount,\n    cartTotal\n  };\n  return /*#__PURE__*/React.createElement(CartContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 12\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","useEffect","addCartItem","cartItems","productToAdd","existingCartItem","find","cartItem","id","map","quantity","removeCartItem","cartItemToRemove","filter","clearCartItem","CartContext","isCartOpen","setIsOpen","addItemToCart","removeItemToCart","clearItemFromCart","setCartItemCount","cartItemCount","cartTotal","CartProvider","children","setIsCartOpen","setCartItems","setCartTotal","count","reduce","total","newCartTotal","price","cartItemToClear","value","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["D:/All-my-projects/10-CROWNCLOTHING/crown-clothing/src/context/cart.context.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { createContext, useState, useEffect } from 'react';\r\n\r\n\r\nconst addCartItem = (cartItems, productToAdd) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === productToAdd.id\r\n    )\r\n\r\n    if (existingCartItem) {\r\n        return cartItems.map(\r\n            (cartItem) => cartItem.id === productToAdd.id\r\n                ? { ...cartItem, quantity: cartItem.quantity + 1 }\r\n                : cartItem\r\n        );\r\n    }\r\n\r\n    return [...cartItems, { ...productToAdd, quantity: 1 }];\r\n}\r\n\r\nconst removeCartItem = (cartItems, cartItemToRemove) => {\r\n    const existingCartItem = cartItems.find(\r\n        cartItem => cartItem.id === cartItemToRemove.id\r\n    )\r\n    if (existingCartItem.quantity === 1) {\r\n        return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n    }\r\n\r\n    return cartItems.map(\r\n        (cartItem) => cartItem.id === cartItemToRemove.id\r\n            ? { ...cartItem, quantity: cartItem.quantity - 1 }\r\n            : cartItem\r\n    );\r\n}\r\n\r\nconst clearCartItem = (cartItems, cartItemToRemove) => {\r\n    return cartItems.filter(cartItem => cartItem.id !== cartItemToRemove.id)\r\n}\r\nexport const CartContext = createContext({\r\n    isCartOpen: false,\r\n    setIsOpen: () => { },\r\n    cartItems: [],\r\n    addItemToCart: () => { },\r\n    removeItemToCart: () => { },\r\n    clearItemFromCart: () => { },\r\n    setCartItemCount: () => { },\r\n    cartItemCount: 0,\r\n    cartTotal: 0,\r\n});\r\n\r\nexport const CartProvider = ({ children }) => {\r\n    const [isCartOpen, setIsCartOpen] = useState(false);\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [cartItemCount, setCartItemCount] = useState(0);\r\n    const [cartTotal, setCartTotal] = useState(0);\r\n\r\n    useEffect(() => {\r\n        const count = cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\r\n        setCartItemCount(count)\r\n    }, [cartItems])\r\n\r\n    useEffect(() => {\r\n        const newCartTotal = cartItems.reduce((total, cartItem) => total + cartItem.quantity * cartItem.price, 0)\r\n        setCartTotal(newCartTotal)\r\n    }, [cartItems])\r\n\r\n\r\n    const addItemToCart = (productToAdd) => {\r\n        setCartItems(addCartItem(cartItems, productToAdd))\r\n    }\r\n\r\n    const removeItemToCart = (cartItemToRemove) => {\r\n        setCartItems(removeCartItem(cartItems, cartItemToRemove));\r\n    };\r\n\r\n    const clearItemFromCart = (cartItemToClear) => {\r\n        setCartItems(clearCartItem(cartItems, cartItemToClear));\r\n    };\r\n\r\n    const value = {\r\n        isCartOpen,\r\n        setIsCartOpen,\r\n        cartItems,\r\n        addItemToCart,\r\n        removeItemToCart,\r\n        clearItemFromCart,\r\n        cartItemCount,\r\n        setCartItemCount,\r\n        cartTotal\r\n    };\r\n    return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}